cscope 15 E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults"               0000041379
	@E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\LoneWolfCombatResultsApp.cpp

10 
	~"wx_pch.h
"

11 
	~"L⁄eWﬁfComb©Resu…sAµ.h
"

14 
	~"L⁄eWﬁfComb©Resu…sMaö.h
"

15 
	~<wx/image.h
>

18 
IMPLEMENT_APP
(
L⁄eWﬁfComb©Resu…sAµ
);

20 
boﬁ
 
	gL⁄eWﬁfComb©Resu…sAµ
::
	$OnInô
()

23 
boﬁ
 
wxsOK
 = 
åue
;

24 
	`wxInôAŒImageH™dÀrs
();

25 i‡–
wxsOK
 )

27 
L⁄eWﬁfComb©Resu…sFøme
* 
Føme
 = 
√w
 
	`L⁄eWﬁfComb©Resu…sFøme
(0);

28 
Føme
->
	`Show
();

29 
	`SëT›Wödow
(
Føme
);

32  
wxsOK
;

34 
	}
}

	@E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\LoneWolfCombatResultsApp.h

10 #i‚de‡
LONEWOLFCOMBATRESULTSAPP_H


11 
	#LONEWOLFCOMBATRESULTSAPP_H


	)

13 
	~<wx/≠p.h
>

15 ˛as†
	cL⁄eWﬁfComb©Resu…sAµ
 : 
public
 
wxAµ


17 
public
:

18 
vútuÆ
 
boﬁ
 
OnInô
();

	@E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\LoneWolfCombatResultsMain.cpp

10 
	~<wx/msgdlg.h
>

11 
	~<°rög
>

13 
	~"wx_pch.h
"

14 
	~"L⁄eWﬁfComb©Resu…sMaö.h
"

15 
	~"ö˛ude/Comb©Resu…s.h
"

18 
	~<wx/f⁄t.h
>

19 
	~<wx/öé.h
>

20 
	~<wx/°rög.h
>

24 
	ewxbuûdöfof‹m©
 {

25 
	msh‹t_f
, 
	ml⁄g_f
 };

27 
wxSåög
 
	$wxbuûdöfo
(
wxbuûdöfof‹m©
 
f‹m©
)

29 
wxSåög
 
	`wxbuûd
(
wxVERSION_STRING
);

31 i‡(
f‹m©
 =
l⁄g_f
 )

33 #i‡
	`deföed
(
__WXMSW__
)

34 
wxbuûd
 << 
	`_T
("-Windows");

35 #ñi‡
	`deföed
(
__UNIX__
)

36 
wxbuûd
 << 
	`_T
("-Linux");

39 #i‡
wxUSE_UNICODE


40 
wxbuûd
 << 
	`_T
("-Unicode build");

42 
wxbuûd
 << 
	`_T
("-ANSI build");

46  
wxbuûd
;

47 
	}
}

50 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_STATICTEXT1
 = 
wxNewId
();

51 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_TEXTCTRL2
 = 
wxNewId
();

52 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_STATICTEXT2
 = 
wxNewId
();

53 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_TEXTCTRL3
 = 
wxNewId
();

54 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_STATICTEXT3
 = 
wxNewId
();

55 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_STATICTEXT4
 = 
wxNewId
();

56 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_RADIOBUTTON1
 = 
wxNewId
();

57 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_RADIOBUTTON2
 = 
wxNewId
();

58 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_TEXTCTRL1
 = 
wxNewId
();

59 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_BUTTON1
 = 
wxNewId
();

60 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_STATICTEXT7
 = 
wxNewId
();

61 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_STATICTEXT5
 = 
wxNewId
();

62 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_STATICTEXT6
 = 
wxNewId
();

63 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_PANEL1
 = 
wxNewId
();

64 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
idMíuQuô
 = 
wxNewId
();

65 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
idMíuAbout
 = 
wxNewId
();

66 c⁄° 
	gL⁄eWﬁfComb©Resu…sFøme
::
ID_STATUSBAR1
 = 
wxNewId
();

69 
	$BEGIN_EVENT_TABLE
(
L⁄eWﬁfComb©Resu…sFøme
,
wxFøme
)

72 
	$END_EVENT_TABLE
()

74 
L⁄eWﬁfComb©Resu…sFøme
::
	$L⁄eWﬁfComb©Resu…sFøme
(
wxWödow
* 
∑ª¡
,
wxWödowID
 
id
)

77 
wxSèticBoxSizî
* 
SèticBoxSizî2
;

78 
wxMíuIãm
* 
MíuIãm2
;

79 
wxMíuIãm
* 
MíuIãm1
;

80 
wxFÀxGridSizî
* 
FÀxGridSizî2
;

81 
wxBoxSizî
* 
BoxSizî2
;

82 
wxMíu
* 
Míu1
;

83 
wxSèticBoxSizî
* 
SèticBoxSizî3
;

84 
wxBoxSizî
* 
BoxSizî1
;

85 
wxMíuB¨
* 
MíuB¨1
;

86 
wxSèticBoxSizî
* 
SèticBoxSizî1
;

87 
wxFÀxGridSizî
* 
FÀxGridSizî1
;

88 
wxMíu
* 
Míu2
;

90 
	`Cª©e
(
∑ª¡
, 
wxID_ANY
, 
	`_
("L⁄êWﬁ‡Comb© Resu…s"), 
wxDeÁu…Posôi⁄
, 
wxDeÁu…Size
, 
wxDEFAULT_FRAME_STYLE
, 
	`_T
("wxID_ANY"));

91 
BoxSizî1
 = 
√w
 
	`wxBoxSizî
(
wxHORIZONTAL
);

92 
P™ñ1
 = 
√w
 
	`wxP™ñ
(
this
, 
ID_PANEL1
, 
wxDeÁu…Posôi⁄
, 
wxDeÁu…Size
, 
wxTAB_TRAVERSAL
, 
	`_T
("ID_PANEL1"));

93 
BoxSizî2
 = 
√w
 
	`wxBoxSizî
(
wxVERTICAL
);

94 
SèticBoxSizî1
 = 
√w
 
	`wxSèticBoxSizî
(
wxHORIZONTAL
, 
P™ñ1
, 
	`_
("COMBAT SKILL"));

95 
FÀxGridSizî1
 = 
√w
 
	`wxFÀxGridSizî
(0, 5, 0, 0);

96 
FÀxGridSizî1
->
	`AddGrowabÀCﬁ
(2);

97 
SèticText1
 = 
√w
 
	`wxSèticText
(
P™ñ1
, 
ID_STATICTEXT1
, 
	`_
("Hîo"), 
wxDeÁu…Posôi⁄
, 
wxDeÁu…Size
, 0, 
	`_T
("ID_STATICTEXT1"));

98 
FÀxGridSizî1
->
	`Add
(
SèticText1
, 1, 
wxALL
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
, 5);

99 
hîoCSöput
 = 
√w
 
	`wxTextCål
(
P™ñ1
, 
ID_TEXTCTRL2
, 
wxEm±ySåög
, 
wxDeÁu…Posôi⁄
, 
	`wxSize
(30,21), 
wxTE_PROCESS_ENTER
, 
wxDeÁu…VÆid©‹
, 
	`_T
("ID_TEXTCTRL2"));

100 
FÀxGridSizî1
->
	`Add
(
hîoCSöput
, 1, 
wxALL
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
, 5);

101 
FÀxGridSizî1
->
	`Add
(98,21,1, 
wxALL
|
wxEXPAND
, 5);

102 
SèticText2
 = 
√w
 
	`wxSèticText
(
P™ñ1
, 
ID_STATICTEXT2
, 
	`_
("E√my"), 
wxDeÁu…Posôi⁄
, 
wxDeÁu…Size
, 0, 
	`_T
("ID_STATICTEXT2"));

103 
FÀxGridSizî1
->
	`Add
(
SèticText2
, 1, 
wxALL
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
, 5);

104 
íemyCSöput
 = 
√w
 
	`wxTextCål
(
P™ñ1
, 
ID_TEXTCTRL3
, 
wxEm±ySåög
, 
wxDeÁu…Posôi⁄
, 
	`wxSize
(30,21), 
wxTE_PROCESS_ENTER
, 
wxDeÁu…VÆid©‹
, 
	`_T
("ID_TEXTCTRL3"));

105 
FÀxGridSizî1
->
	`Add
(
íemyCSöput
, 1, 
wxALL
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
, 5);

106 
FÀxGridSizî1
->
	`Add
(-1,-1,1, 
wxALL
|
wxEXPAND
, 5);

107 
FÀxGridSizî1
->
	`Add
(-1,-1,1, 
wxALL
|
wxEXPAND
, 5);

108 
SèticText3
 = 
√w
 
	`wxSèticText
(
P™ñ1
, 
ID_STATICTEXT3
, 
	`_
("Comb© R©io"), 
wxDeÁu…Posôi⁄
, 
wxDeÁu…Size
, 0, 
	`_T
("ID_STATICTEXT3"));

109 
wxF⁄t
 
	`SèticText3F⁄t
(12,
wxFONTFAMILY_SWISS
,
wxFONTSTYLE_NORMAL
,
wxFONTWEIGHT_NORMAL
,
Ál£
,
wxEm±ySåög
,
wxFONTENCODING_DEFAULT
);

110 
SèticText3
->
	`SëF⁄t
(
SèticText3F⁄t
);

111 
FÀxGridSizî1
->
	`Add
(
SèticText3
, 1, 
wxALL
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
, 5);

112 
FÀxGridSizî1
->
	`Add
(-1,-1,1, 
wxALL
|
wxEXPAND
, 5);

113 
FÀxGridSizî1
->
	`Add
(-1,-1,1, 
wxALL
|
wxEXPAND
, 5);

114 
FÀxGridSizî1
->
	`Add
(-1,-1,1, 
wxALL
|
wxEXPAND
, 5);

115 
FÀxGridSizî1
->
	`Add
(-1,-1,1, 
wxALL
|
wxEXPAND
, 5);

116 
comb©R©ioOuçut
 = 
√w
 
	`wxSèticText
(
P™ñ1
, 
ID_STATICTEXT4
, 
	`_
("--"), 
wxDeÁu…Posôi⁄
, 
wxDeÁu…Size
, 0, 
	`_T
("ID_STATICTEXT4"));

117 
wxF⁄t
 
	`comb©R©ioOuçutF⁄t
(12,
wxFONTFAMILY_SWISS
,
wxFONTSTYLE_NORMAL
,
wxFONTWEIGHT_NORMAL
,
Ál£
,
wxEm±ySåög
,
wxFONTENCODING_DEFAULT
);

118 
comb©R©ioOuçut
->
	`SëF⁄t
(
comb©R©ioOuçutF⁄t
);

119 
FÀxGridSizî1
->
	`Add
(
comb©R©ioOuçut
, 1, 
wxALL
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
, 5);

120 
FÀxGridSizî1
->
	`Add
(-1,-1,1, 
wxALL
|
wxEXPAND
, 5);

121 
FÀxGridSizî1
->
	`Add
(-1,-1,1, 
wxALL
|
wxEXPAND
, 5);

122 
SèticBoxSizî1
->
	`Add
(
FÀxGridSizî1
, 1, 
wxALL
|
wxEXPAND
, 5);

123 
BoxSizî2
->
	`Add
(
SèticBoxSizî1
, 1, 
wxTOP
|
wxLEFT
|
wxRIGHT
|
wxEXPAND
, 5);

124 
SèticBoxSizî2
 = 
√w
 
	`wxSèticBoxSizî
(
wxVERTICAL
, 
P™ñ1
, 
	`_
("DIE ROLL"));

125 
FÀxGridSizî2
 = 
√w
 
	`wxFÀxGridSizî
(0, 2, 0, 0);

126 
RadioBuâ⁄1
 = 
√w
 
	`wxRadioBuâ⁄
(
P™ñ1
, 
ID_RADIOBUTTON1
, 
	`_
("Gíî©ê®øndomÇumbî"), 
wxDeÁu…Posôi⁄
, 
wxDeÁu…Size
, 0, 
wxDeÁu…VÆid©‹
, 
	`_T
("ID_RADIOBUTTON1"));

127 
RadioBuâ⁄1
->
	`SëVÆue
(
åue
);

128 
RadioBuâ⁄1
->
	`DißbÀ
();

129 
FÀxGridSizî2
->
	`Add
(
RadioBuâ⁄1
, 1, 
wxALL
|
wxALIGN_LEFT
|
wxALIGN_CENTER_VERTICAL
, 5);

130 
FÀxGridSizî2
->
	`Add
(108,20,1, 
wxALL
|
wxEXPAND
, 5);

131 
RadioBuâ⁄2
 = 
√w
 
	`wxRadioBuâ⁄
(
P™ñ1
, 
ID_RADIOBUTTON2
, 
	`_
("E¡îáÇumbî from 0Åÿ9"), 
wxDeÁu…Posôi⁄
, 
wxDeÁu…Size
, 0, 
wxDeÁu…VÆid©‹
, 
	`_T
("ID_RADIOBUTTON2"));

132 
RadioBuâ⁄2
->
	`DißbÀ
();

133 
FÀxGridSizî2
->
	`Add
(
RadioBuâ⁄2
, 1, 
wxALL
|
wxALIGN_LEFT
|
wxALIGN_CENTER_VERTICAL
, 5);

134 
øndomNumbîI≈ut
 = 
√w
 
	`wxTextCål
(
P™ñ1
, 
ID_TEXTCTRL1
, 
wxEm±ySåög
, 
wxDeÁu…Posôi⁄
, 
	`wxSize
(30,21), 
wxTE_PROCESS_ENTER
, 
wxDeÁu…VÆid©‹
, 
	`_T
("ID_TEXTCTRL1"));

135 
øndomNumbîI≈ut
->
	`DißbÀ
();

136 
FÀxGridSizî2
->
	`Add
(
øndomNumbîI≈ut
, 0, 
wxALL
, 5);

137 
SèticBoxSizî2
->
	`Add
(
FÀxGridSizî2
, 1, 
wxALL
|
wxEXPAND
, 5);

138 
BoxSizî2
->
	`Add
(
SèticBoxSizî2
, 0, 
wxLEFT
|
wxRIGHT
|
wxEXPAND
, 5);

139 
okBuâ⁄
 = 
√w
 
	`wxBuâ⁄
(
P™ñ1
, 
ID_BUTTON1
, 
	`_
("OK"), 
wxDeÁu…Posôi⁄
, 
wxDeÁu…Size
, 0, 
wxDeÁu…VÆid©‹
, 
	`_T
("ID_BUTTON1"));

140 
okBuâ⁄
->
	`DißbÀ
();

141 
BoxSizî2
->
	`Add
(
okBuâ⁄
, 0, 
wxTOP
|
wxLEFT
|
wxRIGHT
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
, 5);

142 
SèticBoxSizî3
 = 
√w
 
	`wxSèticBoxSizî
(
wxVERTICAL
, 
P™ñ1
, 
	`_
("COMBAT RESULTS"));

143 
gíîÆOuçut
 = 
√w
 
	`wxSèticText
(
P™ñ1
, 
ID_STATICTEXT7
, 
wxEm±ySåög
, 
wxDeÁu…Posôi⁄
, 
wxDeÁu…Size
, 
wxALIGN_CENTRE
, 
	`_T
("ID_STATICTEXT7"));

144 
SèticBoxSizî3
->
	`Add
(
gíîÆOuçut
, 1, 
wxALL
|
wxEXPAND
, 5);

145 
íemyResu…
 = 
√w
 
	`wxSèticText
(
P™ñ1
, 
ID_STATICTEXT5
, 
wxEm±ySåög
, 
wxDeÁu…Posôi⁄
, 
wxDeÁu…Size
, 
wxALIGN_CENTRE
, 
	`_T
("ID_STATICTEXT5"));

146 
SèticBoxSizî3
->
	`Add
(
íemyResu…
, 1, 
wxALL
|
wxEXPAND
, 5);

147 
hîoResu…
 = 
√w
 
	`wxSèticText
(
P™ñ1
, 
ID_STATICTEXT6
, 
wxEm±ySåög
, 
wxDeÁu…Posôi⁄
, 
wxDeÁu…Size
, 
wxALIGN_CENTRE
, 
	`_T
("ID_STATICTEXT6"));

148 
SèticBoxSizî3
->
	`Add
(
hîoResu…
, 1, 
wxALL
|
wxEXPAND
, 5);

149 
BoxSizî2
->
	`Add
(
SèticBoxSizî3
, 0, 
wxBOTTOM
|
wxLEFT
|
wxRIGHT
|
wxEXPAND
, 5);

150 
P™ñ1
->
	`SëSizî
(
BoxSizî2
);

151 
BoxSizî2
->
	`Fô
(
P™ñ1
);

152 
BoxSizî2
->
	`SëSizeHöts
(
P™ñ1
);

153 
BoxSizî1
->
	`Add
(
P™ñ1
, 1, 
wxALL
|
wxEXPAND
, 0);

154 
	`SëSizî
(
BoxSizî1
);

155 
MíuB¨1
 = 
√w
 
	`wxMíuB¨
();

156 
Míu1
 = 
√w
 
	`wxMíu
();

157 
MíuIãm1
 = 
√w
 
	`wxMíuIãm
(
Míu1
, 
idMíuQuô
, 
	`_
("Quô\tA…-F4"), _("QuôÅhê≠∂iˇti⁄"), 
wxITEM_NORMAL
);

158 
Míu1
->
	`Aµíd
(
MíuIãm1
);

159 
MíuB¨1
->
	`Aµíd
(
Míu1
, 
	`_
("&File"));

160 
Míu2
 = 
√w
 
	`wxMíu
();

161 
MíuIãm2
 = 
√w
 
	`wxMíuIãm
(
Míu2
, 
idMíuAbout
, 
	`_
("About\tF1"), _("Show infÿabouàthi†≠∂iˇti⁄"), 
wxITEM_NORMAL
);

162 
Míu2
->
	`Aµíd
(
MíuIãm2
);

163 
MíuB¨1
->
	`Aµíd
(
Míu2
, 
	`_
("Help"));

164 
	`SëMíuB¨
(
MíuB¨1
);

165 
SètusB¨1
 = 
√w
 
	`wxSètusB¨
(
this
, 
ID_STATUSBAR1
, 0, 
	`_T
("ID_STATUSBAR1"));

166 
__wxSètusB¨Widths_1
[2] = { -5, -5 };

167 
__wxSètusB¨StyÀs_1
[2] = { 
wxSB_NORMAL
, wxSB_NORMAL };

168 
SètusB¨1
->
	`SëFõldsCou¡
(2,
__wxSètusB¨Widths_1
);

169 
SètusB¨1
->
	`SëSètusStyÀs
(2,
__wxSètusB¨StyÀs_1
);

170 
	`SëSètusB¨
(
SètusB¨1
);

171 
BoxSizî1
->
	`Fô
(
this
);

172 
BoxSizî1
->
	`SëSizeHöts
(
this
);

174 
	`C⁄√˘
(
ID_TEXTCTRL2
,
wxEVT_COMMAND_TEXT_UPDATED
,(
wxObje˘EvítFun˘i⁄
)&
L⁄eWﬁfComb©Resu…sFøme
::
OnhîoCSöputText
);

175 
	`C⁄√˘
(
ID_TEXTCTRL2
,
wxEVT_COMMAND_TEXT_ENTER
,(
wxObje˘EvítFun˘i⁄
)&
L⁄eWﬁfComb©Resu…sFøme
::
OnhîoCSöputTextE¡î
);

176 
	`C⁄√˘
(
ID_TEXTCTRL3
,
wxEVT_COMMAND_TEXT_UPDATED
,(
wxObje˘EvítFun˘i⁄
)&
L⁄eWﬁfComb©Resu…sFøme
::
O√√myCSöputText
);

177 
	`C⁄√˘
(
ID_TEXTCTRL3
,
wxEVT_COMMAND_TEXT_ENTER
,(
wxObje˘EvítFun˘i⁄
)&
L⁄eWﬁfComb©Resu…sFøme
::
O√√myCSöputTextE¡î
);

178 
	`C⁄√˘
(
ID_RADIOBUTTON1
,
wxEVT_COMMAND_RADIOBUTTON_SELECTED
,(
wxObje˘EvítFun˘i⁄
)&
L⁄eWﬁfComb©Resu…sFøme
::
OnRadioBuâ⁄1Sñe˘
);

179 
	`C⁄√˘
(
ID_RADIOBUTTON2
,
wxEVT_COMMAND_RADIOBUTTON_SELECTED
,(
wxObje˘EvítFun˘i⁄
)&
L⁄eWﬁfComb©Resu…sFøme
::
OnRadioBuâ⁄2Sñe˘
);

180 
	`C⁄√˘
(
ID_TEXTCTRL1
,
wxEVT_COMMAND_TEXT_ENTER
,(
wxObje˘EvítFun˘i⁄
)&
L⁄eWﬁfComb©Resu…sFøme
::
Oƒ™domNumbîI≈utTextE¡î
);

181 
	`C⁄√˘
(
ID_BUTTON1
,
wxEVT_COMMAND_BUTTON_CLICKED
,(
wxObje˘EvítFun˘i⁄
)&
L⁄eWﬁfComb©Resu…sFøme
::
OnokBuâ⁄Click
);

182 
	`C⁄√˘
(
idMíuQuô
,
wxEVT_COMMAND_MENU_SELECTED
,(
wxObje˘EvítFun˘i⁄
)&
L⁄eWﬁfComb©Resu…sFøme
::
OnQuô
);

183 
	`C⁄√˘
(
idMíuAbout
,
wxEVT_COMMAND_MENU_SELECTED
,(
wxObje˘EvítFun˘i⁄
)&
L⁄eWﬁfComb©Resu…sFøme
::
OnAbout
);

186 
ªsu…s
 = 
√w
 
	`Comb©Resu…s
(
this
);

187 
	}
}

189 
	gL⁄eWﬁfComb©Resu…sFøme
::~
	$L⁄eWﬁfComb©Resu…sFøme
()

194 
dñëe
 
ªsu…s
;

195 
	}
}

201 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$OnQuô
(
wxComm™dEvít
& 
evít
)

203 
	`Clo£
();

204 
	}
}

206 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$OnAbout
(
wxComm™dEvít
& 
evít
)

208 
wxSåög
 
msg
 = 
	`wxbuûdöfo
(
l⁄g_f
);

209 
	`wxMesßgeBox
(
msg
, 
	`_
("WelcomeÅo..."));

210 
	}
}

212 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$OnClo£
(
wxClo£Evít
& 
evít
)

214 
evít
.
	`Skù
(
åue
);

215 
	}
}

223 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$OnhîoCSöputText
(
wxComm™dEvít
& 
evít
)

225 
	`˛órCuºítHîoCS
();

226 
	`˛órComb©R©io
();

227 
	`˛órAŒOuçut
();

232 
	`toggÀR™domNumbîSe˘i⁄
(
Ál£
);

233 
okBuâ⁄
->
	`E«bÀ
(
Ál£
);

234 
	}
}

236 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$OnhîoCSöputTextE¡î
(
wxComm™dEvít
& 
evít
)

238 
	`¥o˚ssHîoCSöput
();

239 
	}
}

241 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$O√√myCSöputText
(
wxComm™dEvít
& 
evít
)

243 
	`˛órCuºítE√myCS
();

244 
	`˛órComb©R©io
();

245 
	`˛órAŒOuçut
();

250 
	`toggÀR™domNumbîSe˘i⁄
(
Ál£
);

251 
okBuâ⁄
->
	`E«bÀ
(
Ál£
);

252 
	}
}

254 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$O√√myCSöputTextE¡î
(
wxComm™dEvít
& 
evít
)

256 
	`¥o˚ssE√myCSöput
();

257 
	}
}

262 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$OnRadioBuâ⁄1Sñe˘
(
wxComm™dEvít
& 
evít
)

264 
øndomNumbîI≈ut
->
	`E«bÀ
(
Ál£
);

265 
øndomNumbîI≈ut
->
	`SëLabñ
(
	`_
(""));

266 
	}
}

268 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$OnRadioBuâ⁄2Sñe˘
(
wxComm™dEvít
& 
evít
)

270 
øndomNumbîI≈ut
->
	`E«bÀ
(
åue
);

271 
	}
}

273 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$Oƒ™domNumbîI≈utTextE¡î
(
wxComm™dEvít
& 
evít
)

275 
	`ˇlcuœãComb©Resu…s
();

276 
	}
}

280 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$OnokBuâ⁄Click
(
wxComm™dEvít
& 
evít
)

282 
	`ˇlcuœãComb©Resu…s
();

283 
	}
}

289 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$¥ötCuºítHîoCS
(
°rög
 
msg
)

291 
SètusB¨1
->
	`SëSètusText
("HîÿCOMBAT SKILL: " + 
msg
, 0);

292 
	}
}

294 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$˛órCuºítHîoCS
()

296 
SètusB¨1
->
	`SëSètusText
("", 0);

297 
	}
}

299 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$¥ötCuºítE√myCS
(
°rög
 
msg
)

301 
SètusB¨1
->
	`SëSètusText
("E√my COMBAT SKILL: " + 
msg
, 1);

302 
	}
}

304 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$˛órCuºítE√myCS
()

306 
SètusB¨1
->
	`SëSètusText
("", 1);

307 
	}
}

309 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$¥ötComb©R©io
(
°rög
 
msg
)

311 
comb©R©ioOuçut
->
	`SëLabñ
(
	`_
(
msg
));

312 
	`Layout
();

313 
	}
}

315 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$˛órComb©R©io
()

317 
comb©R©ioOuçut
->
	`SëLabñ
(
	`_
("--"));

318 
	`Layout
();

319 
	}
}

321 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$¥ötGíîÆOuçut
(
°rög
 
msg
)

323 
gíîÆOuçut
->
	`SëLabñ
(
	`_
(
msg
));

324 
	`Layout
();

325 
	}
}

327 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$¥ötDamageToE√my
(
°rög
 
msg
)

329 
íemyResu…
->
	`SëLabñ
(
	`_
(
msg
));

330 
	`Layout
();

331 
	}
}

333 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$¥ötDamageToHîo
(
°rög
 
msg
)

335 
hîoResu…
->
	`SëLabñ
(
	`_
(
msg
));

336 
	`Layout
();

337 
	}
}

339 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$¥ötDõRﬁlEº‹
()

341 
gíîÆOuçut
->
	`SëLabñ
(
	`_
("Error: DIE ROLL must beá value from 0Åo 9"));

342 
	`Layout
();

343 
	}
}

345 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$˛órAŒOuçut
()

347 
gíîÆOuçut
->
	`SëLabñ
(
	`_
(""));

348 
íemyResu…
->
	`SëLabñ
(
	`_
(""));

349 
hîoResu…
->
	`SëLabñ
(
	`_
(""));

350 
	`Layout
();

351 
	}
}

357 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$toggÀR™domNumbîSe˘i⁄
(
boﬁ
 
íabÀ
)

359 i‡(
íabÀ
)

361 
RadioBuâ⁄1
->
	`E«bÀ
(
åue
);

362 
RadioBuâ⁄2
->
	`E«bÀ
(
åue
);

363 
okBuâ⁄
->
	`E«bÀ
(
åue
);

367 i‡(
RadioBuâ⁄2
->
	`GëVÆue
())

369 
øndomNumbîI≈ut
->
	`E«bÀ
(
åue
);

375 
RadioBuâ⁄1
->
	`E«bÀ
(
Ál£
);

376 
RadioBuâ⁄2
->
	`E«bÀ
(
Ál£
);

377 
øndomNumbîI≈ut
->
	`E«bÀ
(
Ál£
);

379 
	}
}

389 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$¥o˚ssHîoCSöput
()

391 
wxSåög
 
comb©SkûlSå
 = 
hîoCSöput
->
	`GëVÆue
();

393 
hîoComb©Skûl
 = 
	`©oi
(
comb©SkûlSå
.
	`c_°r
());

394 
ªsu…s
->
	`£tHîoComb©Skûl
(
hîoComb©Skûl
);

395 
	}
}

401 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$¥o˚ssE√myCSöput
()

403 
wxSåög
 
comb©SkûlSå
 = 
íemyCSöput
->
	`GëVÆue
();

405 
íemyComb©Skûl
 = 
	`©oi
(
comb©SkûlSå
.
	`c_°r
());

406 
ªsu…s
->
	`£tE√myComb©Skûl
(
íemyComb©Skûl
);

407 
	}
}

410 
boﬁ
 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$¥o˚ssR™domNumbîI≈ut
()

412 
wxSåög
 
øndomNumbîSå
 = 
øndomNumbîI≈ut
->
	`GëVÆue
();

414 i‡(
øndomNumbîSå
.
	`IsEm±y
())

416 
	`¥ötDõRﬁlEº‹
();

417  
Ál£
;

422 
øndomNumbî
;

424 i‡(!
øndomNumbîSå
.
	`ToL⁄g
(&
øndomNumbî
))

426 
	`¥ötDõRﬁlEº‹
();

427  
Ál£
;

432 
ªsu…s
->
	`£tDõRﬁl
(
øndomNumbî
);

433  
åue
;

436 
	}
}

438 
	gL⁄eWﬁfComb©Resu…sFøme
::
	$ˇlcuœãComb©Resu…s
()

440 
	`¥o˚ssHîoCSöput
();

441 
	`¥o˚ssE√myCSöput
();

443 
boﬁ
 
doComb©Resu…s
 = 
åue
;

444 i‡(
øndomNumbîI≈ut
->
	`IsE«bÀd
())

446 
doComb©Resu…s
 = 
	`¥o˚ssR™domNumbîI≈ut
();

451 
ªsu…s
->
	`rﬁlDõ
();

454 i‡(
doComb©Resu…s
)

456 
ªsu…s
->
	`ouçutComb©Resu…s
();

458 
	}
}

	@E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\LoneWolfCombatResultsMain.h

10 #i‚de‡
LONEWOLFCOMBATRESULTSMAIN_H


11 
	#LONEWOLFCOMBATRESULTSMAIN_H


	)

14 
	~<wx/sizî.h
>

15 
	~<wx/°©ãxt.h
>

16 
	~<wx/míu.h
>

17 
	~<wx/ãxt˘æ.h
>

18 
	~<wx/ødiobut.h
>

19 
	~<wx/∑√l.h
>

20 
	~<wx/buâ⁄.h
>

21 
	~<wx/‰ame.h
>

22 
	~<wx/°©usbr.h
>

25 
	~"ö˛ude/F‹w¨dDe˛¨©i⁄s.h
"

27 
usög
 
	g°d
::
°rög
;

29 ˛as†
	cL⁄eWﬁfComb©Resu…sFøme
: 
public
 
wxFøme


31 
public
:

33 
L⁄eWﬁfComb©Resu…sFøme
(
wxWödow
* 
∑ª¡
,
wxWödowID
 
id
 = -1);

34 
	mvútuÆ
 ~
L⁄eWﬁfComb©Resu…sFøme
();

36 
¥ötCuºítHîoCS
(
°rög
 
msg
);

37 
˛órCuºítHîoCS
();

39 
¥ötCuºítE√myCS
(
°rög
 
msg
);

40 
˛órCuºítE√myCS
();

42 
¥ötComb©R©io
(
°rög
 
msg
);

43 
˛órComb©R©io
();

45 
¥ötGíîÆOuçut
(
°rög
 
msg
);

46 
¥ötDamageToE√my
(
°rög
 
msg
);

47 
¥ötDamageToHîo
(
°rög
 
msg
);

49 
¥ötDõRﬁlEº‹
();

51 
˛órAŒOuçut
();

53 
toggÀR™domNumbîSe˘i⁄
(
boﬁ
 
íabÀ
);

55 
	m¥iv©e
:

58 
OnQuô
(
wxComm™dEvít
& 
evít
);

59 
OnAbout
(
wxComm™dEvít
& 
evít
);

60 
OnRadioBuâ⁄1Sñe˘
(
wxComm™dEvít
& 
evít
);

61 
OnRadioBuâ⁄2Sñe˘
(
wxComm™dEvít
& 
evít
);

62 
OnComboBox1Sñe˘ed
(
wxComm™dEvít
& 
evít
);

63 
OnComboBox2Sñe˘ed
(
wxComm™dEvít
& 
evít
);

64 
OnokBuâ⁄Click
(
wxComm™dEvít
& 
evít
);

65 
OnhîoCSöputTextE¡î
(
wxComm™dEvít
& 
evít
);

66 
O√√myCSöputTextE¡î
(
wxComm™dEvít
& 
evít
);

67 
Oƒ™domNumbîI≈utTextE¡î
(
wxComm™dEvít
& 
evít
);

68 
OnhîoCSöputText
(
wxComm™dEvít
& 
evít
);

69 
O√√myCSöputText
(
wxComm™dEvít
& 
evít
);

72 
OnClo£
(
wxClo£Evít
& 
evít
);

74 
¥o˚ssHîoCSöput
();

75 
¥o˚ssE√myCSöput
();

76 
boﬁ
 
¥o˚ssR™domNumbîI≈ut
();

77 
ˇlcuœãComb©Resu…s
();

80 c⁄° 
	mID_STATICTEXT1
;

81 c⁄° 
	mID_TEXTCTRL2
;

82 c⁄° 
	mID_STATICTEXT2
;

83 c⁄° 
	mID_TEXTCTRL3
;

84 c⁄° 
	mID_STATICTEXT3
;

85 c⁄° 
	mID_STATICTEXT4
;

86 c⁄° 
	mID_RADIOBUTTON1
;

87 c⁄° 
	mID_RADIOBUTTON2
;

88 c⁄° 
	mID_TEXTCTRL1
;

89 c⁄° 
	mID_BUTTON1
;

90 c⁄° 
	mID_STATICTEXT7
;

91 c⁄° 
	mID_STATICTEXT5
;

92 c⁄° 
	mID_STATICTEXT6
;

93 c⁄° 
	mID_PANEL1
;

94 c⁄° 
	midMíuQuô
;

95 c⁄° 
	midMíuAbout
;

96 c⁄° 
	mID_STATUSBAR1
;

100 
wxSèticText
* 
	mcomb©R©ioOuçut
;

101 
wxRadioBuâ⁄
* 
	mRadioBuâ⁄1
;

102 
wxSèticText
* 
	mSèticText2
;

103 
wxRadioBuâ⁄
* 
	mRadioBuâ⁄2
;

104 
wxP™ñ
* 
	mP™ñ1
;

105 
wxSèticText
* 
	mSèticText1
;

106 
wxSèticText
* 
	mSèticText3
;

107 
wxSèticText
* 
	míemyResu…
;

108 
wxSèticText
* 
	mhîoResu…
;

109 
wxSètusB¨
* 
	mSètusB¨1
;

110 
wxTextCål
* 
	møndomNumbîI≈ut
;

111 
wxBuâ⁄
* 
	mokBuâ⁄
;

112 
wxSèticText
* 
	mgíîÆOuçut
;

113 
wxTextCål
* 
	mhîoCSöput
;

114 
wxTextCål
* 
	míemyCSöput
;

117 
	$DECLARE_EVENT_TABLE
()

119 
Comb©Resu…s
* 
ªsu…s
;

	@E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\include\CombatResults.h

17 #i‚de‡
COMBATRESULTS_H


18 
	#COMBATRESULTS_H


	)

20 
	~<°rög
>

22 
	~"../ö˛ude/F‹w¨dDe˛¨©i⁄s.h
"

24 
usög
 
	g°d
::
°rög
;

26 ˛as†
	cComb©Resu…s


28 
	mpublic
:

29 
Comb©Resu…s
(
L⁄eWﬁfComb©Resu…sFøme
* 
√wVõw
);

30 ~
Comb©Resu…s
();

42 
£tE√myComb©Skûl
(
√wComb©Skûl
);

50 
£tHîoComb©Skûl
(
√wComb©Skûl
);

59 
£tDõRﬁl
(
√wDõRﬁl
);

70 
	$gëE√myComb©Skûl
() const;

75 
	$gëHîoComb©Skûl
() const;

81 
	$gëComb©R©io
() const;

87 
	$gëDõRﬁl
() const;

97 
	`rﬁlDõ
();

103 
	`ouçutComb©Resu…s
();

105 
¥iv©e
:

106 
L⁄eWﬁfComb©Resu…sFøme
* 
võw
;

107 
íemyComb©Skûl
;

108 
hîoComb©Skûl
;

109 
comb©R©io
;

110 
dõRﬁl
;

112 c⁄° 
INVALID_VALUE
 = -999;

122 
boﬁ
 
	$vîifyComb©Skûl
(
comb©Skûl
) const;

127 
	$h™dÀComb©SkûlEº‹
() const;

132 
boﬁ
 
	$vîifyDõRﬁl
(
dõRﬁl
) const;

137 
	$h™dÀDõRﬁlEº‹
() const;

143 
	`ˇlcuœãComb©R©io
();

149 
	`å™¶©eR©ioToIndex
();

154 
	`ouçutE√myComb©Skûl
();

159 
	`ouçutHîoComb©Skûl
();

164 
	`ouçutComb©R©io
();

171 
	`ouçutDõRﬁl
();

176 
	$ouçutDamageToE√my
() const;

181 
	$ouçutDamageToHîo
() const;

188 
°rög
 
	`to_°rög
(
vÆue
);

	@E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\include\ForwardDeclarations.h

1 #i‚de‡
FORWARDDECLARATIONS_H


2 
	#FORWARDDECLARATIONS_H


	)

4 
˛ass
 
	gComb©Resu…s
;

5 
˛ass
 
	gL⁄eWﬁfComb©Resu…sFøme
;

	@E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\resource.rc

1 
ØØ
 
	gICON
 "wx/msw/std.ico"

3 
	~"wx/msw/wx.rc
"

	@E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\src\CombatResults.cpp

17 
	~<io°ªam
>

18 
	~<c°dlib
>

19 
	~<˘ime
>

20 
	~<s°ªam
>

22 
	~"../ö˛ude/Comb©Resu…s.h
"

23 
	~"../L⁄eWﬁfComb©Resu…sMaö.h
"

25 
usög
 
	g°d
::
°rög°ªam
;

27 c⁄° 
	gNUM_ROWS
 = 10;

28 c⁄° 
	gNUM_COLS
 = 13;

40 c⁄° 
°rög
 
	gDAMAGE_TO_ENEMY
[
NUM_ROWS
][
NUM_COLS
] =

64 c⁄° 
°rög
 
	gDAMAGE_TO_HERO
[
NUM_ROWS
][
NUM_COLS
] =

80 
	ecomb©R©ioIndexes
 {
	mNEG_11_OR_GREATER
 = 0, 
	mNEG_10_OR_NEG_9
 = 1, 
	mNEG_8_OR_NEG_7
 = 2,

81 
	mNEG_6_OR_NEG_5
 = 3, 
	mNEG_4_OR_NEG_3
 = 4, 
	mNEG_2_OR_NEG_1
 = 5,

82 
	mZERO
 = 6,

83 
	mPOS_1_OR_POS_2
 = 7, 
	mPOS_3_OR_POS_4
 = 8, 
	mPOS_5_OR_POS_6
 = 9,

84 
	mPOS_7_OR_POS_8
 = 10, 
	mPOS_9_OR_POS_10
 = 11, 
	mPOS_11_OR_GREATER
 = 12};

87 
comb©R©ioIndexes
 
	gcuºítIndex
 = 
ZERO
;

91 
	edõRﬁlMode
 {
	mRANDOM_MODE
, 
	mUSER_MODE
};

94 
dõRﬁlMode
 
	gcuºítMode
 = 
RANDOM_MODE
;

97 c⁄° 
°rög
 
	gRANDOM_NUMBER_TEXT
[] = {"YouÑolled: ", "YouÉntered: "};

99 
	gComb©Resu…s
::
	$Comb©Resu…s
(
L⁄eWﬁfComb©Resu…sFøme
* 
√wVõw
)

100 : 
	$võw
(
√wVõw
)

102 
íemyComb©Skûl
 = 
INVALID_VALUE
;

103 
hîoComb©Skûl
 = 
INVALID_VALUE
;

104 
comb©R©io
 = 
INVALID_VALUE
;

105 
dõRﬁl
 = 
INVALID_VALUE
;

106 
	}
}

108 
	gComb©Resu…s
::~
	$Comb©Resu…s
()

111 
	}
}

117 
Comb©Resu…s
::
	$£tE√myComb©Skûl
(
√wComb©Skûl
)

119 i‡(
	`vîifyComb©Skûl
(
√wComb©Skûl
))

121 
íemyComb©Skûl
 = 
√wComb©Skûl
;

122 
	`ouçutE√myComb©Skûl
();

124 i‡(
hîoComb©Skûl
 !
INVALID_VALUE
)

126 
	`ˇlcuœãComb©R©io
();

129 
võw
->
	`˛órAŒOuçut
();

134 
íemyComb©Skûl
 = 
INVALID_VALUE
;

135 
	`h™dÀComb©SkûlEº‹
();

137 
	}
}

139 
	gComb©Resu…s
::
	$£tHîoComb©Skûl
(
√wComb©Skûl
)

141 i‡(
	`vîifyComb©Skûl
(
√wComb©Skûl
))

143 
hîoComb©Skûl
 = 
√wComb©Skûl
;

144 
	`ouçutHîoComb©Skûl
();

146 i‡(
íemyComb©Skûl
 !
INVALID_VALUE
)

148 
	`ˇlcuœãComb©R©io
();

151 
võw
->
	`˛órAŒOuçut
();

156 
hîoComb©Skûl
 = 
INVALID_VALUE
;

157 
	`h™dÀComb©SkûlEº‹
();

159 
	}
}

161 
	gComb©Resu…s
::
	$£tDõRﬁl
(
√wDõRﬁl
)

163 i‡(
	`vîifyDõRﬁl
(
√wDõRﬁl
))

165 
cuºítMode
 = 
USER_MODE
;

167 
dõRﬁl
 = 
√wDõRﬁl
;

168 
võw
->
	`˛órAŒOuçut
();

169 
	`ouçutDõRﬁl
();

174 
dõRﬁl
 = 
INVALID_VALUE
;

175 
	`h™dÀDõRﬁlEº‹
();

177 
	}
}

183 
	gComb©Resu…s
::
	$gëE√myComb©Skûl
() const

185  
íemyComb©Skûl
;

186 
	}
}

188 
	gComb©Resu…s
::
	$gëHîoComb©Skûl
() const

190  
hîoComb©Skûl
;

191 
	}
}

193 
	gComb©Resu…s
::
	$gëComb©R©io
() const

195  
comb©R©io
;

196 
	}
}

198 
	gComb©Resu…s
::
	$gëDõRﬁl
() const

200  
dõRﬁl
;

201 
	}
}

207 
	gComb©Resu…s
::
	$rﬁlDõ
()

209 
cuºítMode
 = 
RANDOM_MODE
;

212 
	`§™d
((Ë
	`time
(0));

213 
dõRﬁl
 = (
	`ønd
() % 9);

214 
	}
}

217 
	gComb©Resu…s
::
	$ouçutComb©Resu…s
()

219 
võw
->
	`˛órAŒOuçut
();

221 i‡(
hîoComb©Skûl
 =
INVALID_VALUE
)

223 
võw
->
	`¥ötGíîÆOuçut
("Error: invalid Hero COMBAT SKILL");

226 i‡(
íemyComb©Skûl
 =
INVALID_VALUE
)

228 
võw
->
	`¥ötGíîÆOuçut
("Error: invalid Enemy COMBAT SKILL");

231 i‡(
dõRﬁl
 =
INVALID_VALUE
)

233 
	`h™dÀDõRﬁlEº‹
();

238 
	`ouçutDõRﬁl
();

239 
	`ouçutDamageToE√my
();

240 
	`ouçutDamageToHîo
();

242 
	}
}

248 
boﬁ
 
	gComb©Resu…s
::
	$vîifyComb©Skûl
(
comb©Skûl
) const

250 i‡(
comb©Skûl
 > 0)

252  
åue
;

257  
Ál£
;

259 
	}
}

261 
	gComb©Resu…s
::
	$h™dÀComb©SkûlEº‹
() const

263 
võw
->
	`˛órComb©R©io
();

264 
võw
->
	`˛órAŒOuçut
();

265 
võw
->
	`¥ötGíîÆOuçut
("Error: Combat Skill must beáÇumber greaterÅhan 0");

266 
	}
}

268 
boﬁ
 
	gComb©Resu…s
::
	$vîifyDõRﬁl
(
√wDõRﬁl
) const

270 c⁄° 
LOWER_BOUND
 = 0;

271 c⁄° 
UPPER_BOUND
 = 9;

273 i‡(
√wDõRﬁl
 >
LOWER_BOUND
 &&ÇewDõRﬁ»<
UPPER_BOUND
)

275  
åue
;

280  
Ál£
;

282 
	}
}

284 
	gComb©Resu…s
::
	$h™dÀDõRﬁlEº‹
() const

286 
võw
->
	`˛órAŒOuçut
();

287 
võw
->
	`¥ötDõRﬁlEº‹
();

288 
	}
}

290 
	gComb©Resu…s
::
	$ˇlcuœãComb©R©io
()

292 
comb©R©io
 = 
hîoComb©Skûl
 - 
íemyComb©Skûl
;

293 
	`ouçutComb©R©io
();

294 
	`å™¶©eR©ioToIndex
();

299 
võw
->
	`toggÀR™domNumbîSe˘i⁄
(
åue
);

300 
	}
}

302 
	gComb©Resu…s
::
	$ouçutE√myComb©Skûl
()

304 
°rög
 
íemyComb©SkûlSå
 = 
	`to_°rög
(
íemyComb©Skûl
);

305 
võw
->
	`¥ötCuºítE√myCS
(
íemyComb©SkûlSå
);

306 
	}
}

308 
	gComb©Resu…s
::
	$ouçutHîoComb©Skûl
()

310 
°rög
 
hîoComb©SkûlSå
 = 
	`to_°rög
(
hîoComb©Skûl
);

311 
võw
->
	`¥ötCuºítHîoCS
(
hîoComb©SkûlSå
);

312 
	}
}

314 
	gComb©Resu…s
::
	$ouçutComb©R©io
()

316 
°rög
 
comb©R©ioSå
 = 
	`to_°rög
(
comb©R©io
);

317 
võw
->
	`¥ötComb©R©io
(
comb©R©ioSå
);

318 
	}
}

320 
	gComb©Resu…s
::
	$å™¶©eR©ioToIndex
()

322 
comb©R©io
)

326 
cuºítIndex
 = 
NEG_10_OR_NEG_9
;

330 
cuºítIndex
 = 
NEG_8_OR_NEG_7
;

334 
cuºítIndex
 = 
NEG_6_OR_NEG_5
;

338 
cuºítIndex
 = 
NEG_4_OR_NEG_3
;

342 
cuºítIndex
 = 
NEG_2_OR_NEG_1
;

345 
cuºítIndex
 = 
ZERO
;

349 
cuºítIndex
 = 
POS_1_OR_POS_2
;

353 
cuºítIndex
 = 
POS_3_OR_POS_4
;

357 
cuºítIndex
 = 
POS_5_OR_POS_6
;

361 
cuºítIndex
 = 
POS_7_OR_POS_8
;

365 
cuºítIndex
 = 
POS_9_OR_POS_10
;

368 i‡(
comb©R©io
 > 10)

370 
cuºítIndex
 = 
POS_11_OR_GREATER
;

375 
cuºítIndex
 = 
NEG_11_OR_GREATER
;

378 
	}
}

380 
	gComb©Resu…s
::
	$ouçutDõRﬁl
()

382 
°rög
 
dõRﬁlSå
 = 
	`to_°rög
(
dõRﬁl
);

383 
võw
->
	`¥ötGíîÆOuçut
(
RANDOM_NUMBER_TEXT
[
cuºítMode
] + 
dõRﬁlSå
);

384 
	}
}

386 
	gComb©Resu…s
::
	$ouçutDamageToE√my
() const

388 
°rög
 
damagëoE√my
 = 
DAMAGE_TO_ENEMY
[
dõRﬁl
][
cuºítIndex
];

389 
°rög
 
ªsu…Så
;

391 i‡(
damagëoE√my
 == "K")

393 
ªsu…Så
 = "TheÉnemy dies!";

398 
ªsu…Så
 = "ThêíemyÜo£†" + 
damagëoE√my
 + " ENDURANCE";

401 
võw
->
	`¥ötDamageToE√my
(
ªsu…Så
);

402 
	}
}

404 
	gComb©Resu…s
::
	$ouçutDamageToHîo
() const

406 
°rög
 
damagëoHîo
 = 
DAMAGE_TO_HERO
[
dõRﬁl
][
cuºítIndex
];

407 
°rög
 
ªsu…Så
;

409 i‡(
damagëoHîo
 == "K")

411 
ªsu…Så
 = "The Hero dies!";

416 
ªsu…Så
 = "ThêHîÿlo£†" + 
damagëoHîo
 + " ENDURANCE";

419 
võw
->
	`¥ötDamageToHîo
(
ªsu…Så
);

420 
	}
}

422 
°rög
 
	gComb©Resu…s
::
	$to_°rög
(
vÆue
)

424 
°rög°ªam
 
ss
;

425 
ss
 << 
vÆue
;

426  
ss
.
	`°r
();

427 
	}
}

	@E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\wx_pch.h

10 #i‚de‡
WX_PCH_H_INCLUDED


11 
	#WX_PCH_H_INCLUDED


	)

14 
	~<wx/wx¥ec.h
>

16 #ifde‡
__BORLANDC__


17 #¥agm®
hdr°›


20 #i‚de‡
WX_PRECOMP


21 
	~<wx/wx.h
>

24 #ifde‡
WX_PRECOMP


	@E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\wxsmith\LoneWolfCombatResultsframe.wxs

1 <?
xml
 
	gvîsi⁄
="1.0" 
ícodög
="utf-8" ?>

2 <
wxsmôh
>

3 <
obje˘
 
˛ass
="wxFøme" 
«me
="LoneWolfCombatResultsFrame">

4 <
tôÀ
>
L⁄e
 
Wﬁf
 
Comb©
 
Resu…s
</title>

5 <
id_¨g
>0</id_arg>

6 <
obje˘
 
˛ass
="wxBoxSizî" 
v¨übÀ
="BoxSizî1" 
membî
="no">

7 <
obje˘
 
˛ass
="sizeritem">

8 <
obje˘
 
˛ass
="wxP™ñ" 
«me
="ID_PANEL1" 
v¨übÀ
="P™ñ1" 
membî
="yes">

9 <
obje˘
 
˛ass
="wxBoxSizî" 
v¨übÀ
="BoxSizî2" 
membî
="no">

10 <
‹õ¡
>
wxVERTICAL
</orient>

11 <
obje˘
 
˛ass
="sizeritem">

12 <
obje˘
 
˛ass
="wxSèticBoxSizî" 
v¨übÀ
="SèticBoxSizî1" 
membî
="no">

13 <
œbñ
>
COMBAT
 
SKILL
</label>

14 <
obje˘
 
˛ass
="sizeritem">

15 <
obje˘
 
˛ass
="wxFÀxGridSizî" 
v¨übÀ
="FÀxGridSizî1" 
membî
="no">

16 <
cﬁs
>5</cols>

17 <
growabÀcﬁs
>2</growablecols>

18 <
obje˘
 
˛ass
="sizeritem">

19 <
obje˘
 
˛ass
="wxSèticText" 
«me
="ID_STATICTEXT1" 
v¨übÀ
="SèticText1" 
membî
="yes">

20 <
œbñ
>
Hîo
</label>

21 </
obje˘
>

22 <
Êag
>
wxALL
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
</flag>

23 <
b‹dî
>5</border>

24 <
›ti⁄
>1</option>

25 </
obje˘
>

26 <
obje˘
 
˛ass
="sizeritem">

27 <
obje˘
 
˛ass
="wxTextCål" 
«me
="ID_TEXTCTRL2" 
v¨übÀ
="hîoCSöput" 
membî
="yes">

28 <
size
>30,21</
	gsize
>

29 <
	g°yÀ
>
	gwxTE_PROCESS_ENTER
</style>

30 <
h™dÀr
 
	gfun˘i⁄
="OnhîoCSöputText" 
íåy
="EVT_TEXT" />

31 <
h™dÀr
 
fun˘i⁄
="OnhîoCSöputTextE¡î" 
íåy
="EVT_TEXT_ENTER" />

32 </
obje˘
>

33 <
Êag
>
wxALL
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
</flag>

34 <
b‹dî
>5</border>

35 <
›ti⁄
>1</option>

36 </
obje˘
>

37 <
obje˘
 
˛ass
="spacer">

38 <
Êag
>
wxALL
|
wxEXPAND
</flag>

39 <
b‹dî
>5</border>

40 <
›ti⁄
>1</option>

41 <
size
>98,21</
	gsize
>

42 </
	gobje˘
>

43 <
obje˘
 
	g˛ass
="sizeritem">

44 <
obje˘
 
˛ass
="wxSèticText" 
«me
="ID_STATICTEXT2" 
v¨übÀ
="SèticText2" 
membî
="yes">

45 <
œbñ
>
E√my
</label>

46 </
obje˘
>

47 <
Êag
>
wxALL
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
</flag>

48 <
b‹dî
>5</border>

49 <
›ti⁄
>1</option>

50 </
obje˘
>

51 <
obje˘
 
˛ass
="sizeritem">

52 <
obje˘
 
˛ass
="wxTextCål" 
«me
="ID_TEXTCTRL3" 
v¨übÀ
="íemyCSöput" 
membî
="yes">

53 <
size
>30,21</
	gsize
>

54 <
	g°yÀ
>
	gwxTE_PROCESS_ENTER
</style>

55 <
h™dÀr
 
	gfun˘i⁄
="O√√myCSöputText" 
íåy
="EVT_TEXT" />

56 <
h™dÀr
 
fun˘i⁄
="O√√myCSöputTextE¡î" 
íåy
="EVT_TEXT_ENTER" />

57 </
obje˘
>

58 <
Êag
>
wxALL
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
</flag>

59 <
b‹dî
>5</border>

60 <
›ti⁄
>1</option>

61 </
obje˘
>

62 <
obje˘
 
˛ass
="spacer">

63 <
Êag
>
wxALL
|
wxEXPAND
</flag>

64 <
b‹dî
>5</border>

65 <
›ti⁄
>1</option>

66 </
obje˘
>

67 <
obje˘
 
˛ass
="spacer">

68 <
Êag
>
wxALL
|
wxEXPAND
</flag>

69 <
b‹dî
>5</border>

70 <
›ti⁄
>1</option>

71 </
obje˘
>

72 <
obje˘
 
˛ass
="sizeritem">

73 <
obje˘
 
˛ass
="wxSèticText" 
«me
="ID_STATICTEXT3" 
v¨übÀ
="SèticText3" 
membî
="yes">

74 <
œbñ
>
Comb©
 
R©io
</label>

75 <
f⁄t
>

76 <
size
>12</size>

77 <
°yÀ
>
n‹mÆ
</style>

78 <
weight
>
n‹mÆ
</weight>

79 <
undîlöed
>0</underlined>

80 <
Ámûy
>
swiss
</family>

81 </
f⁄t
>

82 </
obje˘
>

83 <
Êag
>
wxALL
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
</flag>

84 <
b‹dî
>5</border>

85 <
›ti⁄
>1</option>

86 </
obje˘
>

87 <
obje˘
 
˛ass
="spacer">

88 <
Êag
>
wxALL
|
wxEXPAND
</flag>

89 <
b‹dî
>5</border>

90 <
›ti⁄
>1</option>

91 </
obje˘
>

92 <
obje˘
 
˛ass
="spacer">

93 <
Êag
>
wxALL
|
wxEXPAND
</flag>

94 <
b‹dî
>5</border>

95 <
›ti⁄
>1</option>

96 </
obje˘
>

97 <
obje˘
 
˛ass
="spacer">

98 <
Êag
>
wxALL
|
wxEXPAND
</flag>

99 <
b‹dî
>5</border>

100 <
›ti⁄
>1</option>

101 </
obje˘
>

102 <
obje˘
 
˛ass
="spacer">

103 <
Êag
>
wxALL
|
wxEXPAND
</flag>

104 <
b‹dî
>5</border>

105 <
›ti⁄
>1</option>

106 </
obje˘
>

107 <
obje˘
 
˛ass
="sizeritem">

108 <
obje˘
 
˛ass
="wxSèticText" 
«me
="ID_STATICTEXT4" 
v¨übÀ
="comb©R©ioOuçut" 
membî
="yes">

109 <
œbñ
>--</label>

110 <
f⁄t
>

111 <
size
>12</size>

112 <
°yÀ
>
n‹mÆ
</style>

113 <
weight
>
n‹mÆ
</weight>

114 <
undîlöed
>0</underlined>

115 <
Ámûy
>
swiss
</family>

116 </
f⁄t
>

117 </
obje˘
>

118 <
Êag
>
wxALL
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
</flag>

119 <
b‹dî
>5</border>

120 <
›ti⁄
>1</option>

121 </
obje˘
>

122 <
obje˘
 
˛ass
="spacer">

123 <
Êag
>
wxALL
|
wxEXPAND
</flag>

124 <
b‹dî
>5</border>

125 <
›ti⁄
>1</option>

126 </
obje˘
>

127 <
obje˘
 
˛ass
="spacer">

128 <
Êag
>
wxALL
|
wxEXPAND
</flag>

129 <
b‹dî
>5</border>

130 <
›ti⁄
>1</option>

131 </
obje˘
>

132 </
obje˘
>

133 <
Êag
>
wxALL
|
wxEXPAND
</flag>

134 <
b‹dî
>5</border>

135 <
›ti⁄
>1</option>

136 </
obje˘
>

137 </
obje˘
>

138 <
Êag
>
wxTOP
|
wxLEFT
|
wxRIGHT
|
wxEXPAND
</flag>

139 <
b‹dî
>5</border>

140 <
›ti⁄
>1</option>

141 </
obje˘
>

142 <
obje˘
 
˛ass
="sizeritem">

143 <
obje˘
 
˛ass
="wxSèticBoxSizî" 
v¨übÀ
="SèticBoxSizî2" 
membî
="no">

144 <
œbñ
>
DIE
 
ROLL
</label>

145 <
‹õ¡
>
wxVERTICAL
</orient>

146 <
obje˘
 
˛ass
="sizeritem">

147 <
obje˘
 
˛ass
="wxFÀxGridSizî" 
v¨übÀ
="FÀxGridSizî2" 
membî
="no">

148 <
cﬁs
>2</cols>

149 <
obje˘
 
˛ass
="sizeritem">

150 <
obje˘
 
˛ass
="wxRadioBuâ⁄" 
«me
="ID_RADIOBUTTON1" 
v¨übÀ
="RadioBuâ⁄1" 
membî
="yes">

151 <
œbñ
>
Gíî©e
 
a
 
øndom
 
numbî
</label>

152 <
£À˘ed
>1</selected>

153 <
íabÀd
>0</enabled>

154 <
h™dÀr
 
fun˘i⁄
="OnRadioBuâ⁄1Sñe˘" 
íåy
="EVT_RADIOBUTTON" />

155 </
obje˘
>

156 <
Êag
>
wxALL
|
wxALIGN_LEFT
|
wxALIGN_CENTER_VERTICAL
</flag>

157 <
b‹dî
>5</border>

158 <
›ti⁄
>1</option>

159 </
obje˘
>

160 <
obje˘
 
˛ass
="spacer">

161 <
Êag
>
wxALL
|
wxEXPAND
</flag>

162 <
b‹dî
>5</border>

163 <
›ti⁄
>1</option>

164 <
size
>108,20</
	gsize
>

165 </
	gobje˘
>

166 <
obje˘
 
	g˛ass
="sizeritem">

167 <
obje˘
 
˛ass
="wxRadioBuâ⁄" 
«me
="ID_RADIOBUTTON2" 
v¨übÀ
="RadioBuâ⁄2" 
membî
="yes">

168 <
œbñ
>
E¡î
 
a
 
numbî
 
‰om
 0 
to
 9</label>

169 <
íabÀd
>0</enabled>

170 <
h™dÀr
 
fun˘i⁄
="OnRadioBuâ⁄2Sñe˘" 
íåy
="EVT_RADIOBUTTON" />

171 </
obje˘
>

172 <
Êag
>
wxALL
|
wxALIGN_LEFT
|
wxALIGN_CENTER_VERTICAL
</flag>

173 <
b‹dî
>5</border>

174 <
›ti⁄
>1</option>

175 </
obje˘
>

176 <
obje˘
 
˛ass
="sizeritem">

177 <
obje˘
 
˛ass
="wxTextCål" 
«me
="ID_TEXTCTRL1" 
v¨übÀ
="øndomNumbîI≈ut" 
membî
="yes">

178 <
size
>30,21</
	gsize
>

179 <
	gíabÀd
>0</enabled>

180 <
	g°yÀ
>
	gwxTE_PROCESS_ENTER
</style>

181 <
h™dÀr
 
	gfun˘i⁄
="Oƒ™domNumbîI≈utTextE¡î" 
íåy
="EVT_TEXT_ENTER" />

182 </
obje˘
>

183 <
Êag
>
wxALL
</flag>

184 <
b‹dî
>5</border>

185 </
obje˘
>

186 </
obje˘
>

187 <
Êag
>
wxALL
|
wxEXPAND
</flag>

188 <
b‹dî
>5</border>

189 <
›ti⁄
>1</option>

190 </
obje˘
>

191 </
obje˘
>

192 <
Êag
>
wxLEFT
|
wxRIGHT
|
wxEXPAND
</flag>

193 <
b‹dî
>5</border>

194 </
obje˘
>

195 <
obje˘
 
˛ass
="sizeritem">

196 <
obje˘
 
˛ass
="wxBuâ⁄" 
«me
="ID_BUTTON1" 
v¨übÀ
="okBuâ⁄" 
membî
="yes">

197 <
œbñ
>
OK
</label>

198 <
íabÀd
>0</enabled>

199 <
h™dÀr
 
fun˘i⁄
="OnokBuâ⁄Click" 
íåy
="EVT_BUTTON" />

200 </
obje˘
>

201 <
Êag
>
wxTOP
|
wxLEFT
|
wxRIGHT
|
wxALIGN_CENTER_HORIZONTAL
|
wxALIGN_CENTER_VERTICAL
</flag>

202 <
b‹dî
>5</border>

203 </
obje˘
>

204 <
obje˘
 
˛ass
="sizeritem">

205 <
obje˘
 
˛ass
="wxSèticBoxSizî" 
v¨übÀ
="SèticBoxSizî3" 
membî
="no">

206 <
œbñ
>
COMBAT
 
RESULTS
</label>

207 <
‹õ¡
>
wxVERTICAL
</orient>

208 <
obje˘
 
˛ass
="sizeritem">

209 <
obje˘
 
˛ass
="wxSèticText" 
«me
="ID_STATICTEXT7" 
v¨übÀ
="gíîÆOuçut" 
membî
="yes">

210 <
œbñ
></label>

211 <
°yÀ
>
wxALIGN_CENTRE
</style>

212 </
obje˘
>

213 <
Êag
>
wxALL
|
wxEXPAND
</flag>

214 <
b‹dî
>5</border>

215 <
›ti⁄
>1</option>

216 </
obje˘
>

217 <
obje˘
 
˛ass
="sizeritem">

218 <
obje˘
 
˛ass
="wxSèticText" 
«me
="ID_STATICTEXT5" 
v¨übÀ
="íemyResu…" 
membî
="yes">

219 <
œbñ
></label>

220 <
°yÀ
>
wxALIGN_CENTRE
</style>

221 </
obje˘
>

222 <
Êag
>
wxALL
|
wxEXPAND
</flag>

223 <
b‹dî
>5</border>

224 <
›ti⁄
>1</option>

225 </
obje˘
>

226 <
obje˘
 
˛ass
="sizeritem">

227 <
obje˘
 
˛ass
="wxSèticText" 
«me
="ID_STATICTEXT6" 
v¨übÀ
="hîoResu…" 
membî
="yes">

228 <
œbñ
></label>

229 <
°yÀ
>
wxALIGN_CENTRE
</style>

230 </
obje˘
>

231 <
Êag
>
wxALL
|
wxEXPAND
</flag>

232 <
b‹dî
>5</border>

233 <
›ti⁄
>1</option>

234 </
obje˘
>

235 </
obje˘
>

236 <
Êag
>
wxBOTTOM
|
wxLEFT
|
wxRIGHT
|
wxEXPAND
</flag>

237 <
b‹dî
>5</border>

238 </
obje˘
>

239 </
obje˘
>

240 </
obje˘
>

241 <
Êag
>
wxALL
|
wxEXPAND
</flag>

242 <
›ti⁄
>1</option>

243 </
obje˘
>

244 </
obje˘
>

245 <
obje˘
 
˛ass
="wxMíuB¨" 
v¨übÀ
="MíuB¨1" 
membî
="no">

246 <
obje˘
 
˛ass
="wxMíu" 
v¨übÀ
="Míu1" 
membî
="no">

247 <
œbñ
>&
amp
;
	gFûe
</
	gœbñ
>

248 <
obje˘
 
	g˛ass
="wxMíuIãm" 
«me
="idMíuQuô" 
v¨übÀ
="MíuIãm1" 
membî
="no">

249 <
œbñ
>
Quô
</label>

250 <
ac˚l
>
A…
-
F4
</accel>

251 <
hñp
>
Quô
 
the
 
≠∂iˇti⁄
</help>

252 <
h™dÀr
 
fun˘i⁄
="OnQuô" 
íåy
="EVT_MENU" />

253 </
obje˘
>

254 </
obje˘
>

255 <
obje˘
 
˛ass
="wxMíu" 
v¨übÀ
="Míu2" 
membî
="no">

256 <
œbñ
>
Hñp
</label>

257 <
obje˘
 
˛ass
="wxMíuIãm" 
«me
="idMíuAbout" 
v¨übÀ
="MíuIãm2" 
membî
="no">

258 <
œbñ
>
About
</label>

259 <
ac˚l
>
F1
</accel>

260 <
hñp
>
Show
 
öfo
 
about
 
this
 
≠∂iˇti⁄
</help>

261 <
h™dÀr
 
fun˘i⁄
="OnAbout" 
íåy
="EVT_MENU" />

262 </
obje˘
>

263 </
obje˘
>

264 </
obje˘
>

265 <
obje˘
 
˛ass
="wxSètusB¨" 
«me
="ID_STATUSBAR1" 
v¨übÀ
="SètusB¨1" 
membî
="yes">

266 <
fõlds
>2</fields>

267 <
widths
>-5,-5</
	gwidths
>

268 <
	g°yÀs
>
	gwxSB_NORMAL
,wxSB_NORMAL</styles>

269 </
	gobje˘
>

270 </
	gobje˘
>

271 </
	gwxsmôh
>

	@LoneWolfCombatResultsApp.h

10 #i‚de‡
LONEWOLFCOMBATRESULTSAPP_H


11 
	#LONEWOLFCOMBATRESULTSAPP_H


	)

13 
	~<wx/≠p.h
>

15 ˛as†
	cL⁄eWﬁfComb©Resu…sAµ
 : 
public
 
wxAµ


17 
public
:

18 
vútuÆ
 
boﬁ
 
OnInô
();

	@LoneWolfCombatResultsMain.h

10 #i‚de‡
LONEWOLFCOMBATRESULTSMAIN_H


11 
	#LONEWOLFCOMBATRESULTSMAIN_H


	)

14 
	~<wx/sizî.h
>

15 
	~<wx/°©ãxt.h
>

16 
	~<wx/míu.h
>

17 
	~<wx/ãxt˘æ.h
>

18 
	~<wx/ødiobut.h
>

19 
	~<wx/∑√l.h
>

20 
	~<wx/buâ⁄.h
>

21 
	~<wx/‰ame.h
>

22 
	~<wx/°©usbr.h
>

25 
	~"ö˛ude/F‹w¨dDe˛¨©i⁄s.h
"

27 
usög
 
	g°d
::
°rög
;

29 ˛as†
	cL⁄eWﬁfComb©Resu…sFøme
: 
public
 
wxFøme


31 
public
:

33 
L⁄eWﬁfComb©Resu…sFøme
(
wxWödow
* 
∑ª¡
,
wxWödowID
 
id
 = -1);

34 
	mvútuÆ
 ~
L⁄eWﬁfComb©Resu…sFøme
();

36 
¥ötCuºítHîoCS
(
°rög
 
msg
);

37 
˛órCuºítHîoCS
();

39 
¥ötCuºítE√myCS
(
°rög
 
msg
);

40 
˛órCuºítE√myCS
();

42 
¥ötComb©R©io
(
°rög
 
msg
);

43 
˛órComb©R©io
();

45 
¥ötGíîÆOuçut
(
°rög
 
msg
);

46 
¥ötDamageToE√my
(
°rög
 
msg
);

47 
¥ötDamageToHîo
(
°rög
 
msg
);

49 
¥ötDõRﬁlEº‹
();

51 
˛órAŒOuçut
();

53 
toggÀR™domNumbîSe˘i⁄
(
boﬁ
 
íabÀ
);

55 
	m¥iv©e
:

58 
OnQuô
(
wxComm™dEvít
& 
evít
);

59 
OnAbout
(
wxComm™dEvít
& 
evít
);

60 
OnRadioBuâ⁄1Sñe˘
(
wxComm™dEvít
& 
evít
);

61 
OnRadioBuâ⁄2Sñe˘
(
wxComm™dEvít
& 
evít
);

62 
OnComboBox1Sñe˘ed
(
wxComm™dEvít
& 
evít
);

63 
OnComboBox2Sñe˘ed
(
wxComm™dEvít
& 
evít
);

64 
OnokBuâ⁄Click
(
wxComm™dEvít
& 
evít
);

65 
OnhîoCSöputTextE¡î
(
wxComm™dEvít
& 
evít
);

66 
O√√myCSöputTextE¡î
(
wxComm™dEvít
& 
evít
);

67 
Oƒ™domNumbîI≈utTextE¡î
(
wxComm™dEvít
& 
evít
);

68 
OnhîoCSöputText
(
wxComm™dEvít
& 
evít
);

69 
O√√myCSöputText
(
wxComm™dEvít
& 
evít
);

72 
OnClo£
(
wxClo£Evít
& 
evít
);

74 
¥o˚ssHîoCSöput
();

75 
¥o˚ssE√myCSöput
();

76 
boﬁ
 
¥o˚ssR™domNumbîI≈ut
();

77 
ˇlcuœãComb©Resu…s
();

80 c⁄° 
	mID_STATICTEXT1
;

81 c⁄° 
	mID_TEXTCTRL2
;

82 c⁄° 
	mID_STATICTEXT2
;

83 c⁄° 
	mID_TEXTCTRL3
;

84 c⁄° 
	mID_STATICTEXT3
;

85 c⁄° 
	mID_STATICTEXT4
;

86 c⁄° 
	mID_RADIOBUTTON1
;

87 c⁄° 
	mID_RADIOBUTTON2
;

88 c⁄° 
	mID_TEXTCTRL1
;

89 c⁄° 
	mID_BUTTON1
;

90 c⁄° 
	mID_STATICTEXT7
;

91 c⁄° 
	mID_STATICTEXT5
;

92 c⁄° 
	mID_STATICTEXT6
;

93 c⁄° 
	mID_PANEL1
;

94 c⁄° 
	midMíuQuô
;

95 c⁄° 
	midMíuAbout
;

96 c⁄° 
	mID_STATUSBAR1
;

100 
wxSèticText
* 
	mcomb©R©ioOuçut
;

101 
wxRadioBuâ⁄
* 
	mRadioBuâ⁄1
;

102 
wxSèticText
* 
	mSèticText2
;

103 
wxRadioBuâ⁄
* 
	mRadioBuâ⁄2
;

104 
wxP™ñ
* 
	mP™ñ1
;

105 
wxSèticText
* 
	mSèticText1
;

106 
wxSèticText
* 
	mSèticText3
;

107 
wxSèticText
* 
	míemyResu…
;

108 
wxSèticText
* 
	mhîoResu…
;

109 
wxSètusB¨
* 
	mSètusB¨1
;

110 
wxTextCål
* 
	møndomNumbîI≈ut
;

111 
wxBuâ⁄
* 
	mokBuâ⁄
;

112 
wxSèticText
* 
	mgíîÆOuçut
;

113 
wxTextCål
* 
	mhîoCSöput
;

114 
wxTextCål
* 
	míemyCSöput
;

117 
	$DECLARE_EVENT_TABLE
()

119 
Comb©Resu…s
* 
ªsu…s
;

	@include/CombatResults.h

17 #i‚de‡
COMBATRESULTS_H


18 
	#COMBATRESULTS_H


	)

20 
	~<°rög
>

22 
	~"../ö˛ude/F‹w¨dDe˛¨©i⁄s.h
"

24 
usög
 
	g°d
::
°rög
;

26 ˛as†
	cComb©Resu…s


28 
	mpublic
:

29 
Comb©Resu…s
(
L⁄eWﬁfComb©Resu…sFøme
* 
√wVõw
);

30 ~
Comb©Resu…s
();

42 
£tE√myComb©Skûl
(
√wComb©Skûl
);

50 
£tHîoComb©Skûl
(
√wComb©Skûl
);

59 
£tDõRﬁl
(
√wDõRﬁl
);

70 
	$gëE√myComb©Skûl
() const;

75 
	$gëHîoComb©Skûl
() const;

81 
	$gëComb©R©io
() const;

87 
	$gëDõRﬁl
() const;

97 
	`rﬁlDõ
();

103 
	`ouçutComb©Resu…s
();

105 
¥iv©e
:

106 
L⁄eWﬁfComb©Resu…sFøme
* 
võw
;

107 
íemyComb©Skûl
;

108 
hîoComb©Skûl
;

109 
comb©R©io
;

110 
dõRﬁl
;

112 c⁄° 
INVALID_VALUE
 = -999;

122 
boﬁ
 
	$vîifyComb©Skûl
(
comb©Skûl
) const;

127 
	$h™dÀComb©SkûlEº‹
() const;

132 
boﬁ
 
	$vîifyDõRﬁl
(
dõRﬁl
) const;

137 
	$h™dÀDõRﬁlEº‹
() const;

143 
	`ˇlcuœãComb©R©io
();

149 
	`å™¶©eR©ioToIndex
();

154 
	`ouçutE√myComb©Skûl
();

159 
	`ouçutHîoComb©Skûl
();

164 
	`ouçutComb©R©io
();

171 
	`ouçutDõRﬁl
();

176 
	$ouçutDamageToE√my
() const;

181 
	$ouçutDamageToHîo
() const;

188 
°rög
 
	`to_°rög
(
vÆue
);

	@include/ForwardDeclarations.h

1 #i‚de‡
FORWARDDECLARATIONS_H


2 
	#FORWARDDECLARATIONS_H


	)

4 
˛ass
 
	gComb©Resu…s
;

5 
˛ass
 
	gL⁄eWﬁfComb©Resu…sFøme
;

	@wx_pch.h

10 #i‚de‡
WX_PCH_H_INCLUDED


11 
	#WX_PCH_H_INCLUDED


	)

14 
	~<wx/wx¥ec.h
>

16 #ifde‡
__BORLANDC__


17 #¥agm®
hdr°›


20 #i‚de‡
WX_PRECOMP


21 
	~<wx/wx.h
>

24 #ifde‡
WX_PRECOMP


	@
1
.
0
15
1188
E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\LoneWolfCombatResultsApp.cpp
E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\LoneWolfCombatResultsApp.h
E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\LoneWolfCombatResultsMain.cpp
E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\LoneWolfCombatResultsMain.h
E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\include\CombatResults.h
E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\include\ForwardDeclarations.h
E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\resource.rc
E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\src\CombatResults.cpp
E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\wx_pch.h
E:\Dropbox\Programming\C++\CodeBlocks Projects\Projects\GUI\LoneWolfCombatResults\wxsmith\LoneWolfCombatResultsframe.wxs
LoneWolfCombatResultsApp.h
LoneWolfCombatResultsMain.h
include/CombatResults.h
include/ForwardDeclarations.h
wx_pch.h
